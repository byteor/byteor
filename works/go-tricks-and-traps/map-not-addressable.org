** Code

#+BEGIN_SRC go
package main

func main() {
	type user struct {
		name string
		age  byte
	}
	m := map[int]user{
		1: {"Tom", 19},
	}

	m[1].age += 1
}
#+END_SRC

** Compile

#+BEGIN_SRC shell
go build map.go
# command-line-arguments
./map.go:12: cannot assign to struct field m[1].age in map
#+END_SRC

** Code

#+BEGIN_SRC go
package main

func main() {
	type user struct {
		name string
		age  byte
	}

	m1 := map[int]user{
		1: {"Tom", 19},
	}
	u := m1[1]
	u.age += 1
	m1[1] = u

	m2 := map[int]*user{
		1: &user{"Tom", 19},
	}

	m2[1].age += 1
}
#+END_SRC

** Notes

Golang map is designed "not addressable", if you want to change the stored
value, you have two ways:

- Use value pointer type
- Set the whole value again
