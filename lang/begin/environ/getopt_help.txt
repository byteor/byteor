#include <unistd.h>

int getopt(int argc, char *const argv[], const char *optstring);
extern char *optarg;
extern int optind, opterr, optopt;


getopt:

    #1 if option is assosiated with a value, extern optarg point it
    #2 getopt return -1 if all options handled, argument -- stops getopt scan
    #3 getopt return char '?' when option not recognized and save it to
       extern optopt
    #4 if option must have a assosiated value but user does not provided,
       getopt returns '?'. if we have set option string first char ':',
       getopt returns ':' when option value not provided.

optind: next argument index



#include <getopt.h>

struct option {
    const char *name; /* long option name */
    int has_arg;      /* 0 - no value, 1 - exact one, 2 - optional one */
    int *flag;        /* NULL - getopt_long return member val
                         other - getopt_long return 0 and set val to flag */
    int val;          /* getopt_long return value after process this option */
};

int getopt_long(int argc, char *const argv[], const char *optstring,
                const struct option *longopts, int *longindex);
