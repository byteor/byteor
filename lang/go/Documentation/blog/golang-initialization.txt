              ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
                         GOLANG INITIALIZATION

               [https://golang.org/doc/effective_go.html]
              ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━


Table of Contents
─────────────────

1 Constants
.. 1.1 they are created at compile time, even when defined as locals in functions
.. 1.2 can only be numbers, characters (runes), strings or booleans
.. 1.3 iota enumerator
2 Variables
.. 2.1 computed at run time
3 The init function





1 Constants
═══════════

1.1 they are created at compile time, even when defined as locals in functions
──────────────────────────────────────────────────────────────────────────────


1.2 can only be numbers, characters (runes), strings or booleans
────────────────────────────────────────────────────────────────


1.3 iota enumerator
───────────────────

  ┌────
  │ type ByteSize float64
  │
  │ const (
  │     _           = iota // ignore first value by assigning to blank identifier
  │     KB ByteSize = 1 << (10*iota)
  │     MB
  │     GB
  │     TB
  │     PB
  │     EB
  │     ZB
  │     YB
  │ )
  └────


2 Variables
═══════════

2.1 computed at run time
────────────────────────

  ┌────
  │ var (
  │     home   = os.Getenv("HOME")
  │     user   = os.Getenv("USER")
  │     gopath = os.Getenv("GOPATH")
  │ )
  └────


3 The init function
═══════════════════

  Finally, each source file can define its own niladic init function to
  set up whatever state is required. (Actually each file can have
  multiple init functions.) And finally means finally: init is called
  after all the variable declarations in the package have evaluated
  their initializers, and those are evaluated only after all the
  imported packages have been initialized.

  Besides initializations that cannot be expressed as declarations, a
  common use of init functions is to verify or repair correctness of the
  program state before real execution begins.

  ┌────
  │ func init() {
  │     if user == "" {
  │         log.Fatal("$USER not set")
  │     }
  │     if home == "" {
  │         home = "/home/" + user
  │     }
  │     if gopath == "" {
  │         gopath = home + "/go"
  │     }
  │     // gopath may be overridden by --gopath flag on command line.
  │     flag.StringVar(&gopath, "gopath", gopath, "override default GOPATH")
  │ }
  └────
