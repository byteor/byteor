Go lang slice operations
========================

| Operation                                   | Go lang                                              |
|---------------------------------------------+------------------------------------------------------|
| Append a slice b to an existing slice a     | a = append(a, b...)                                  |
| Copy a slice a to a new slice b             | b = make([]T, len(a))                                |
| Delete item at index i                      | a = append(a[:i], a[i+1:]...)                        |
| Cut from index i till j out of slice a      | a = append(a[:i], a[j:]...)                          |
| Extend slice a with a new slice of length j | a = append(a, make([]T, j)...)                       |
| Insert item x at index i                    | a = append(a[:i], append([]T{x}, a[i:]...)...)       |
| Insert a new slice of length at index i     | a = append(a[:i), append(make([]T, j), a[i:]...)...) |
| Insert an existing slice b at index i       | a = append(a[:i], append(b, a[i:]...)...)            |
| Pop highest element from stack              | x, a = a[len(a)-1], a[:len(a)-1]                     |
| Push an element x on a stack                | a = append(a, x)                                     |
