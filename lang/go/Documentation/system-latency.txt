#+TITLE: Network and disk I/O are still expensive
#+AUTHOR: Dave Channey

| Event                                      | Latency   | Scaled        |
|--------------------------------------------+-----------+---------------|
| 1 CPU cycle                                | 0.3 ns    | 1 s           |
| Level 1 cache access                       | 0.9 ns    | 3 s           |
| Level 2 cache access                       | 2.8 ns    | 9 s           |
| Level 3 cache access                       | 12.9 ns   | 43 s          |
| Main memory access (DRAM, from CPU)        | 120 ns    | 6 min         |
| Solid-state disk I/O (flash memory)        | 50-150 us | 2-6 days      |
| Rotational disk I/O                        | 1-10 ms   | 1-12 months   |
| Internet: San Francisco to New York        | 40 ms     | 4 years       |
| Internet: San Francisco to United Kingdom  | 81 ms     | 8 years       |
| Internet: San Francisco to Australia       | 183 ms    | 19 years      |
| TCP packet retransmit                      | 1-3 s     | 105-317 years |
| OS virtualization system reboot            | 4 s       | 423 years     |
| SCSI command time-out                      | 30 s      | 3 millennia   |
| Hardware (HW) virtualization system reboot | 40 s      | 4 millennia   |
| Physical system reboot                     | 5 m       | 32 millennia  |

* Golang specific

| Event                                       | Latency     |
|---------------------------------------------+-------------|
| L1 cache reference                          | 1ns         |
| Branch mispredict                           | 5ns         |
| L2 cache reference                          | 7ns         |
| Mutex lock/unlock                           | 25ns        |
| Linear seek in 100 long slice @F1           | 80ns        |
| Main memory reference                       | 100ns       |
| Go sync.Mutex lock/unlock @F1               | 100ns       |
| Go channel send/receive @F1                 | 300ns       |
| Go native map retrieval @F1                 | 350ns       |
| Go native map insertion @F1                 | 1000ns      |
| Call method reflectively @F1                | 1000ns      |
| Compress 1Kb /w cheap compression algorithm | 3000ns      |
| Send 2Kb over 1Gbps network                 | 20000ns     |
| Read 1Mb sequentially from memory           | 250000ns    |
| Roundtrip within datacenter                 | 500000ns    |
| Memcache access @F1                         | 3000000ns   |
| Datastore put @F1                           | 6000000ns   |
| Datastore get @F1                           | 6000000ns   |
| Datastore query @F1                         | 6500000ns   |
| Disk seek                                   | 10000000ns  |
| Read 1Mb sequentially from disk             | 20000000ns  |
| Roundtrip over the atlantic                 | 150000000ns |
