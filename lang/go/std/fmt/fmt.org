#+TITLE: Package fmt
#+AUTHOR: Golang Authors
#+EMAIL: lockrecv@outlook.com

* Printing

** General

| Format | Description                                                                                |
|--------+--------------------------------------------------------------------------------------------|
| %v     | the value in a default format, when printing structs, the plus flag (%+v) adds field names |
| %#v    | a Go-syntax representation of the value                                                    |
| %T     | a Go-syntax representation of the type of the value                                        |
| %%     | a literal percent sign; consumes no value                                                  |

** Boolean

| Format | Description            |
|--------+------------------------|
| %t     | the word true or false |

** Integer

| Format | Description                                                       |
|--------+-------------------------------------------------------------------|
| %b     | base 2                                                            |
| %c     | the character represented by the corresponding Unicode code point |
| %d     | base 10                                                           |
| %o     | base 8                                                            |
| %q     | a single-quoted character literal safely escaped with Go syntax   |
| %x     | base 16, with lower-case letters for a-f                          |
| %X     | base 16, with upper-case letters for A-F                          |
| %U     | Unicode format: U+1234; same as "U+%04X"                          |

** Floating-point and complex constituents

| Format | Description                                                                                                                              |
|--------+------------------------------------------------------------------------------------------------------------------------------------------|
| %b     | decimalless scientific notation with exponent a power of two, in the manner of strconv.FormatFloat with the 'b' format, e.g. -123456p-78 |
| %e     | scientific notation, e.g. -1.234456e+78                                                                                                  |
| %E     | scientific notation, e.g. -1.234456E+78                                                                                                  |
| %f     | decimal point but no exponent, e.g. 123.456                                                                                              |
| %F     | synonym for %f                                                                                                                           |
| %g     | %e for large exponents, %f otherwise                                                                                                     |
| %G     | %E for large exponents, %F otherwise                                                                                                     |

** String and slice of bytes (treated equivalently with these verbs):

| Format | Description                                          |
|--------+------------------------------------------------------|
| %s     | the uninterpreted bytes of the string or slice       |
| %q     | a double-quoted string safely escaped with Go syntax |
| %x     | base 16, lower-case, two characters per byte         |
| %X     | base 16, upper-case, two characters per byte         |

** Pointer

| Format | Description                       |
|--------+-----------------------------------|
| %p     | base 16 notation, with leading 0x |

** Default format for %v

| Format                  | Description                 |
|-------------------------+-----------------------------|
| bool                    | %t                          |
| int, int8 etc.          | %d                          |
| uint, uint8, etc.       | %d, %#x if printed with %#v |
| float32, complex64, etc | %g                          |
| string                  | %s                          |
| chan                    | %p                          |
| pointer                 | %p                          |

** Compound objects

| Format           | Description                  |
|------------------+------------------------------|
| struct           | {field0 field1 ...}          |
| array, slice     | [elem0 elem1 ...]            |
| maps             | map[key1:value1 key2:value2] |
| pointer to above | &{}, &[], &map[]             |
