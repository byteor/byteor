Boss/Worker Model
=================

The idea is to have a single boss thread that creates work and several
worker threads that process the work. Typically the boss thread creates
a certain number of workers right away|even before any work has arrived.
The worker threads form a thread pool and are all programed to block
immediately. When the boss thread generates some work, it arranges to
have one worker thread unblock to handle it.


Pipeline Model
==============

Many programs take some input, transform it in several stages, and then
output the result. Instead of having a single thread perform each step
in sequence you could have a separate thread handling each stage. The
result is much like an assembly line. The data flows from one worker to
another and each worker performs their particular operation on the data.
By the time the data reaches the end of the line it has been fully
transformed into the desired output.


Background Task Model
=====================

Many programs have tasks that they would like to complete "in the back-
ground."


Interface/Implementation Model
==============================

Such as graphical events, operating system file I/O.
