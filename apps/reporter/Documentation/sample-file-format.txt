APS SAMPLE FILE FORMAT DESCRIPTION
==================================

Author: Zhou Peng <p@ctriple.cn>
Date: 2015-08-11

+-----------------------------------------+
|                                         |
| struct file_head {                      |
|   uint32_t magic;                       |
|   uint32_t index;                       |
|   struct timeval {                      |
|     uint32_t tv_sec;                    |
|     uint32_t tv_usec;                   |
|   } begintime;                          |
|   struct timeval {                      |
|     uint32_t tv_sec;                    |
|     uint32_t tv_usec;                   |
|   } endtime;                            |
|   uint64_t stBeginTime;                 |
|   uint64_t stEndTime;                   |
|   uint64_t reset_value;                 |
|   uint32_t cputype;                     |
|   uint32_t reserved;                    |
| };                                      |
|                                         |
|-----------------------------------------|
|                                         |
| for (i = 0; i < file_head.index; i++) { |
|                                         |
| struct record_entry {                   |
|   int user;                             |
|   int pid;                              |
|   int tid;                              |
|   int time_diff;                        |
|   int pmc_index;                        |
|   int cs_layer;                         |
|   uint32_t event;                       |
|   uint32_t unitmask;                    |
|   uint32_t pc;                          |
|   uint32_t cs[MAX_CALL_DEPTH];          |
| };                                      |
|                                         |
| }                                       |
|                                         |
|-----------------------------------------|
|                                         |
| struct module_head {                    |
|   uint32_t magic;                       |
|   uint32_t num;                         |
| };                                      |
|                                         |
|-----------------------------------------|
|                                         |
| for (i = 0; i < module_head.num; i++) { |
|                                         |
| struct module_entry {                   |
|   uint32_t start;                       |
|   uint32_t end;                         |
|   char module_name[MAX_PATH_LENGTH];    |
| };                                      |
|                                         |
| }                                       |
|                                         |
|-----------------------------------------|
|                                         |
| struct vma_head {                       |
|   uint32_t magic;                       |
|   uint32_t num;                         |
| };                                      |
|                                         |
|-----------------------------------------|
|                                         |
| for (i = 0; i < vma_head.num; i++) {    |
|                                         |
| struct vma_entry {                      |
|   int pid;                              |
|   int is_sre;                           |
|   uint32_t vm_start;                    |
|   uint32_t vm_end;                      |
|   char vm_file[MAX_PATH_LENGTH];        |
| };                                      |
|                                         |
| }                                       |
|                                         |
+-----------------------------------------+
