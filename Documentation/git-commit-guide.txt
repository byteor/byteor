1. Don't submit any whitespace errors, git provides an easy way
   to check for this, before you commit, run

        git diff --check

   which identifies possible whitespace errors and lists them
   for you.

2. Try to make each commit a logically separate changeset. If
   you can, try to make your changes digestible - don't code for
   a whole weekend on five different issues and then submit them
   all as one massive commit on Monday. Even if you don't commit
   during the weekend, use the staging area on Monday to split
   your work into at least one commit per issue, with a userfull
   message per commit. If some of the changes modify the same
   file, try to use git add --patch to partially stage files.

3. As a general rule, your messages should start with a single
   line that's no more than about 50 characters and that
   describes the changeset concisely, followed by a blank line,
   followed by a more detailed explanation. Template written by
   Tim Pope:


   Short (50 chars or less) summary of changes

   More detailed explanatory text, if necessary. Wrap it to
   about 72 characters or so. In some contexts, the first
   line is treated as the subject of an email and the reset of
   the text as the body. The blank line separating the summary
   from the body is critical (unless you omit the body entirely);
   tools like rebase can get confused if you run the two tegether.

   Further paragraphs come after blank lines.

     - Bullet points are okay, too

     - Typically a hyphen or asterisk is used for the bullet,
       preceded by a single space, with blank lines in between,
       but conventions vary here
