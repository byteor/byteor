Every powerful language has three mechanisms for accomplishing this:

  1. primitive expressions, which represent the simplest entities the
     language is concerned with,

  2. means of combination, by which compound elements are built from
     simpler ones, and

  3. means of abstraction, by which compound elements can be named and
     manipulated as units.

The contrast between function and procedure is a reflection of the
general distinction between describing properties of things and
describing how to do things, or, as it is sometimes referred to, the
distinction between declarative knowledge and imperative knowledge. In
mathematics we are usually concerned with declarative (what is)
descriptions, whereas in computer science we are usually concerned
with imperative (how to) descriptions.
