myisamchk:
    check and repaire MYISAM table

mysql:
    mysql command shell

mysqladmin:
    database administration tool

mysqlbug:
    generate mysql error report which can be sent to maintainer

mysqldump:
    dump whole database using SQL statement

mysqlimport:
    batch import data to table

mysqlshow:
    show databases, tables, columns, column property



#include <mysql.h>

/* connection and disconnection */
MYSQL *mysql_init(MYSQL *connection);
MYSQL *mysql_real_connect(MYSQL *connection,
                          const char *server_host,
                          const char *sql_user_name,
                          const char *sql_password,
                          const char *db_name,
                          unsigned int port_number,
                          const char *unix_socket_name,
                          unsigned int flags);
void mysql_close(MYSQL *connection);
int mysql_options(MYSQL *connection, enum option_to_set,
                  const char *argument);


enum option_to_set:
    --------------------------------------------------------------------------------------
        enum option                 acutal arg type                note
    --------------------------------------------------------------------------------------
    MySQL_OPT_CONNECT_TIMEOUT     const unsigned int *     set connection timeout
    MySQL_OPT_COMPRESS            None, using NULL         using compression via internet
    MySQL_INIT_COMMAND            const char *             command send to server after
                                                           connection initialized
    --------------------------------------------------------------------------------------


/* error checking */
unsigned int mysql_errno(MYSQL *connection);
char *mysql_error(MYSQL *connection);

/* query */
int mysql_query(MYSQL *connection, const char *query);
my_ulonglong mysql_affected_rows(MYSQL *connection);
MYSQL_RES *mysql_store_result(MYSQL *connection);
my_ulonglong mysql_num_rows(MYSQL_RES *result);
MYSQL_ROW mysql_fetch_row(MYSQL_RES *result);
void mysql_data_seek(MYSQL *result, my_ulonglong offset);
MYSQL_ROW_OFFSET mysql_row_tell(MYSQL_RES *result);
MYSQL_ROW_OFFSET mysql_row_seek(MYSQL_RES *result, MYSQL_ROW_OFFSET offset);
void mysql_free_result(MYSQL_RES *result);
MYSQL_RES *mysql_use_result(MYSQL *connection);
unsigned int mysql_field_count(MYSQL *connection);
MYSQL_FIELD *mysql_fetch_field(MYSQL_RES *result);
MYSQL_FIELD_OFFSET mysql_field_seek(MYSQL_RES *result,
                                    MYSQL_FIELD_OFFSET offset);


struct MYSQL_FIELD {
    char *name;        /* column name */
    char *table;       /* table name */
    char *def;         /* mysql_list_fields */
    enum enum_field_types type; /* column type */
    unsigned int length;        /* column width */
    unsigned int max_length;    /* mysql_store_result() set */
    unsigned int flags;         /* NOT_NULL_FLAG, PRI_KEY_FLAG,
                                   UNSIGNED_FLAG, AUTO_INCREMENT_FLAG,
                                   BINARY_FLAG */
    unsigned int decimals;
};

enum enum_filed_types {
    FIELD_TYPE_DECIMAL,
    FIELD_TYPE_LONG,
    FIELD_TYPE_STRING,
    FIELD_TYPE_VAR_STRING,
};

eg:

    if (IS_NUM(mysql_field_ptr->type))
        printf("Numeric type field\n");
