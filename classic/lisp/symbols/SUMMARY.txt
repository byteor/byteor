Summary
=======

1. Any string can be the name of a symbol, but symbols created by read are
   transformed into uppercase by default.

2. Symbols have associated property lists, which behave like assoc-lists,
   though they don't have the same form.

3. Symbols are substantial objects, more like structures than mere names.

4. packages map strings to symbols. To create an entry for a symbol in a
   package is to intern it. Symbols do not have to be interned.

5. Package enforce modularity by restricting which names you can refer to.
   By default your programs will be in the user pakcage, but larger programs
   are often divided into several packages defined for that purpose.

6. Symbols can be made accessible in other packages. Keywords are
   self-evaluating and accessible in any package.

7. When a program operates on words, it's convenient to represent the words
   as symbols.
