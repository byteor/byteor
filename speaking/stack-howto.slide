Stack HowTo
北京
16 May 2018

周朋
p@ctriple.cn
https://github.com/byteor
微信 lockrecv

* License

Copyright © Zhou Peng <p@ctriple.cn>

* Stack Frame

  CPU Registers
      +-----------------------------------------------------------+
      | +--------------+    +---------------+    +--------------+ |
      | |      esp     |    |       ebp     |    |     eax      | |
      | | stack poiner |    | frame pointer |    | return value | |
      | +--------------+    +---------------+    +--------------+ |
      +--------|-------------------|------------------------------+
               |                   |
      +--------+                   |
      ↓                            ↓
      +----------------+-----------+--------+---------+-----------+-----------+
      |  local_buffer  |  local1   |  saved |  return |  param1   |  param2   |
      |                |    8      |   ebp  | address |    512    |   65536   |
      |f o o b a r 00 ?|08 00 00 00|        |         |00 02 00 00|00 00 01 00|
      +----------------+-----------+--------+---------+-----------+-----------+
      ↑                ↑           ↑        ↑         ↑           ↑
  -12(%ebp)       -4(%ebp)     (%ebp)  4(%ebp)   8(%ebp)    12(%ebp)

                stack growth              higher memory addresses
  <=================================  ==================================>

* Register

esp: point to stack top
Some cpu instructions will update esp automatically.

  1 int add(int a, int b) {
  2     int result = a + b;
  3     return result;
  4 }
  5
  6 int main(int argc, char *argv[]) {
  7     int answer;
  8     answer = add(40, 2);
  9 }

We're going to run step by step, and watch what happens to %ebp and %esp.

* GDB-1

- call main # push return address onto stack, jump into main

   +-----------+            +-----------+
   |    ebp    |            |    esp    |
   |    null   |            |           |
   |00 00 00 00|            |bf ff f6 dc|
   +-----------+            +-----------+
         |                        |
       -----                      ↓
        ---                       +------------------+-----------+
         -                        |      return      |    argc   |
                                  |      address     |     1     |
                                  | libc start_main()|01 00 00 00|
                                  +------------------+-----------+

* GDB-2

- pushl %ebp # save current ebp register value

   +-----------+            +-----------+
   |    ebp    |            |    esp    |
   |    null   |            |           |
   |00 00 00 00|            |bf ff f6 d8|
   +-----------+            +-----------+
         |                        |
       -----                      ↓
        ---                       +-----------+------------------+-----------+
         -                        | saved ebp |      return      |    argc   |
                                  |    null   |      address     |     1     |
                                  |00 00 00 00| libc start_main()|01 00 00 00|
                                  +-----------+------------------+-----------+
                                        |
                                      -----
                                       ---
                                        -

* GDB-3

- movl %esp, %ebp # copy esp to ebp

   +-----------+-----------+
   |    esp    |    ebp    |
   |    null   |  main(1)  |
   |bf ff f6 d8|bf ff f6 d8|
   +-----------+-----------+
         |        |
         |--------+
         ↓
         +-----------+------------------+-----------+
         | saved ebp |      return      |    argc   |
         |    null   |      address     |     1     |
         |00 00 00 00| libc start_main()|01 00 00 00|
         +-----------+------------------+-----------+
               |
             -----
              ---
               -

* GDB-4

- subl $12, %esp # make room for stack data

   +-----------+               +-----------+
   |    esp    |               |    ebp    |
   |           |               |  main(1)  |
   |bf ff f6 cc|               |bf ff f6 d8|
   +-----------+               +-----------+
         |                          |
         ↓                          ↓
         +--------+--------+--------+-----------+------------------+-----------+
         |   a    |    b   | answer | saved ebp |      return      |    argc   |
         |        |        |        |    null   |      address     |     1     |
         |   ??   |   ??   |   ??   |00 00 00 00| libc start_main()|01 00 00 00|
         +--------+--------+--------+-----------+------------------+-----------+
                                          |
                                        -----
                                         ---
                                          -

* GDB-5

- movl $2, $(%esp) # set b to 2
- movl $40, (%esp) # set a to 40

   +-----------+                    +-----------+
   |    esp    |                    |    ebp    |
   |           |                    |  main(1)  |
   |bf ff f6 cc|                    |bf ff f6 d8|
   +-----------+                    +-----------+
         |                                |
         ↓                                ↓
         +-----------+-----------+--------+-----------+------------------+-----------+
         |      a    |      b    | answer | saved ebp |      return      |    argc   |
         |     40    |      2    |        |    null   |      address     |     1     |
         |28 00 00 00|02 00 00 00|   ??   |00 00 00 00| libc start_main()|01 00 00 00|
         +-----------+-----------+--------+-----------+------------------+-----------+
                                                |
                                              -----
                                               ---
                                                -

* GDB-6

- call add # push return address onto stack, jump into add

   +-----------+                                +-----------+
   |    esp    |                                |    ebp    |
   |           |                                |  main(1)  |
   |bf ff f6 c8|                                |bf ff f6 d8|
   +-----------+                                +-----------+
         |                                            |
         ↓                                            ↓
         +-----------+-----------+-----------+--------+-----------+------------------+-----------+
         |   return  |      a    |      b    | answer | saved ebp |      return      |    argc   |
         |   address |     40    |      2    |        |    null   |      address     |     1     |
         | main.c:9  |28 00 00 00|02 00 00 00|   ??   |00 00 00 00| libc start_main()|01 00 00 00|
         +-----------+-----------+-----------+--------+-----------+------------------+-----------+
                                                            |
                                                          -----
                                                           ---
                                                            -

* GDB-7

- pushl %ebp # save current ebp register value (Little-Endian)

   +-----------+                                            +-----------+
   |    esp    |                                            |    ebp    |
   |           |                                            |  main(1)  |
   |bf ff f6 c4|                                            |bf ff f6 d8|
   +-----------+                                            +-----------+
         |                                                        |
         ↓                                                        ↓
         +-----------+-----------+-----------+-----------+--------+-----------+------------------+-----------+
         | saved ebp |   return  |      a    |      b    | answer | saved ebp |      return      |    argc   |
         |  main(1)  |   address |     40    |      2    |        |    null   |      address     |     1     |
         |d8 f6 ff bf| main.c:9  |28 00 00 00|02 00 00 00|   ??   |00 00 00 00| libc start_main()|01 00 00 00|
         +-----------+-----------+-----------+-----------+--------+-----------+------------------+-----------+
               |                                                  ↑    |
               +--------------------------------------------------+  -----
                                                                      ---
                                                                       -

* GDB-8

- movl %esp, %ebp # copy esp to ebp

   +-----------+-----------+
   |    esp    |    ebp    |
   |           |  main(1)  |
   |bf ff f6 c4|bf ff f6 c4|
   +-----------+-----------+
         |           |
         |-----------+
         ↓
         +-----------+-----------+-----------+-----------+--------+-----------+------------------+-----------+
         | saved ebp |   return  |      a    |      b    | answer | saved ebp |      return      |    argc   |
         |  main(1)  |   address |     40    |      2    |        |    null   |      address     |     1     |
         |d8 f6 ff bf| main.c:9  |28 00 00 00|02 00 00 00|   ??   |00 00 00 00| libc start_main()|01 00 00 00|
         +-----------+-----------+-----------+-----------+--------+-----------+------------------+-----------+
               |                                                  ↑    |
               +--------------------------------------------------+  -----
                                                                      ---
                                                                       -

* GDB-9

- subl $4, %esp # make room for result

   +-----------+  +-----------+
   |    esp    |  |    ebp    |
   |           |  |  add(40,2)|
   |bf ff f6 c0|  |bf ff f6 c4|
   +-----------+  +-----------+
         |         |
         ↓         ↓
         +---------+-----------+-----------+-----------+-----------+--------+-----------+------------------+-----------+
         |  result | saved ebp |   return  |      a    |      b    | answer | saved ebp |      return      |    argc   |
         |         |  main(1)  |   address |     40    |      2    |        |    null   |      address     |     1     |
         |    ??   |d8 f6 ff bf| main.c:9  |28 00 00 00|02 00 00 00|   ??   |00 00 00 00| libc start_main()|01 00 00 00|
         +---------+-----------+-----------+-----------+-----------+--------+-----------+------------------+-----------+
                        |                                                   ↑    |
                        +---------------------------------------------------+  -----
                                                                                ---
                                                                                 -

* GDB-10

- movl 12(%ebp), %eax # move b to eax
- movl 8(%ebp), %edx  # move a to edx
- addl %edx, %eax     # add edx into eax, total is 42

   +-----------+  +-----------+            +-----------+
   |    esp    |  |    ebp    |            |     eax   |
   |           |  |  add(40,2)|            |     42    |
   |bf ff f6 c0|  |bf ff f6 c4|            |00 00 00 2a|
   +-----------+  +-----------+            +-----------+
         |         |
         ↓         ↓
         +---------+-----------+-----------+-----------+-----------+--------+-----------+------------------+-----------+
         |  result | saved ebp |   return  |      a    |      b    | answer | saved ebp |      return      |    argc   |
         |         |  main(1)  |   address |     40    |      2    |        |    null   |      address     |     1     |
         |    ??   |d8 f6 ff bf| main.c:9  |28 00 00 00|02 00 00 00|   ??   |00 00 00 00| libc start_main()|01 00 00 00|
         +---------+-----------+-----------+-----------+-----------+--------+-----------+------------------+-----------+
                        |                                                   ↑    |
                        +---------------------------------------------------+  -----
                                                                                ---
                                                                                 -

* GDB-11

- movl %eax, -4(%ebp) # copy eax to result

   +-----------+  +-----------+            +-----------+
   |    esp    |  |    ebp    |            |     eax   |
   |           |  |  add(40,2)|            |     42    |
   |bf ff f6 c0|  |bf ff f6 c4|            |00 00 00 2a|
   +-----------+  +-----------+            +-----------+
         |           |
         ↓           ↓
         +-----------+-----------+-----------+-----------+-----------+--------+-----------+------------------+-----------+
         |   result  | saved ebp |   return  |      a    |      b    | answer | saved ebp |      return      |    argc   |
         |     42    |  main(1)  |   address |     40    |      2    |        |    null   |      address     |     1     |
         |21 00 00 00|d8 f6 ff bf| main.c:9  |28 00 00 00|02 00 00 00|   ??   |00 00 00 00| libc start_main()|01 00 00 00|
         +-----------+-----------+-----------+-----------+-----------+--------+-----------+------------------+-----------+
                          |                                                   ↑    |
                          +---------------------------------------------------+  -----
                                                                                  ---
                                                                                   -
