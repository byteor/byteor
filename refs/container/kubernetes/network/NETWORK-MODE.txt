# Kubernetes requirements on any networking implementation

- pods on a node can communicate with all pods on all nodes without NAT
- agents on a node (e.g. system daemons, kubelet) can communicate with all pods on that node

For those platforms that support Pods running in the host network (e.g. Linux):

- pods in the host network of a node can communicate with all pods on all nodes witout NAT

# Compatible with VM

This model is not only less complex overall, but it is principally compatible
with the desire for Kubernetes to enable low-friction porting of apps from VMs
to containers. If your job previously ran in a VM, your VM had an IP and could
talk to other VMs in your project. This is the same basic model.

# IP per Pod

Kubernetes IP addresses exist at the Pod scope - containers within a Pod share
their network namespaces - including their IP address. This means that
containers within a Pod can all reach each other’s ports on localhost. This also
means that containers within a Pod must coordinate port usage, but this is no
different from processes in a VM. This is called the “IP-per-pod” model.
